name: CI/CD

on:
    push:
      branches: [ "master" ]
    workflow_dispatch:

permissions:
    contents: read
    id-token: write
  
jobs:
    run_tests:

        runs-on: ubuntu-latest

        steps:
          - uses: actions/checkout@v4
        
          - name: Set up python 3.12
            uses: actions/setup-python@v3
            with:
                python-version: "3.12"
            
          - name: Set up make
            run: |
                sudo apt update
                sudo apt install -y make
          - name: Run tests
            run: |
                make test


    publish_image:

        name: Push Docker image to Docker Hub
        runs-on: ubuntu-latest
        needs: run_tests

        steps:

          - name: Check out the repo
            uses: actions/checkout@v4
          
          - name: Log in to Docker Hub
            uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
            with:
                username: ${{ secrets.DOCKER_LOGIN }}
                password: ${{ secrets.DOCKER_PASS }}

          - name: Extract metadata (tags, labels) for Docker
            id: meta
            uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
            with:
                images: arsenier/cicd-task
        

          - name: Build and push Docker image
            id: push
            uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
            with:
                context: .
                file: ./build/Dockerfile
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}

                
          # - name: Generate artifact attestation
          #   uses: actions/attest-build-provenance@v1
          #   with:
          #       subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          #       subject-digest: ${{ steps.push.outputs.digest }}
          #       push-to-registry: true

    publish_nginx:
        name: Push Nginx image to Docker Hub
        runs-on: ubuntu-latest

        steps:

          - name: Check out the repo
            uses: actions/checkout@v4
          
          - name: Log in to Docker Hub
            uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
            with:
                username: ${{ secrets.DOCKER_LOGIN }}
                password: ${{ secrets.DOCKER_PASS }}

          - name: Extract metadata (tags, labels) for Docker
            id: meta
            uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
            with:
                images: arsenier/cicd-task
        

          - name: Build and push Docker image
            id: push
            uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
            with:
                context: ./nginx/
                file: ./nginx/Dockerfile
                push: true
                tags: arsenier/cicd-task:nginx
                
          # - name: Generate artifact attestation
          #   uses: actions/attest-build-provenance@v1
          #   with:
          #       subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          #       subject-digest: ${{ steps.push.outputs.digest }}
          #       push-to-registry: true
    
    deploy_application:
        name: Deploy application on the remote server
        runs-on: ubuntu-latest
        needs: publish_image

        steps:
          - name: Log into the server via SSH and deploy image
            uses: appleboy/ssh-action@v1.2.0
            with:
              host: ${{ secrets.SELECTEL_SERVER_IP }}
              username: ${{ secrets.SELECTEL_SERVER_USER }}
              key: ${{ secrets.SELECTEL_PRIVATE_SSH_KEY }}
              script: |
                  docker ps -aq | xargs docker stop | xargs docker rm
                  docker run --pull=always -d -p 5000:5000 arsenier/cicd-task:master
